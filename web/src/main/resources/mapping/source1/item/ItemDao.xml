<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unisound.iot.dao.mapper.source1.item.ItemDao">

    <!--查询组件信息映射为云端组件-->
    <select id="findDwhItemById" resultType="com.unisound.iot.common.modle.DwhItem" >
        SELECT item_id as itemId ,
              domain_id as domainId ,
              item_structure as itemStructure ,
              product_type as productType ,
              1 as createType
        from item
        where dr = 0 and item_id = #{ itemId }

    </select>
    <!--查询组件基本信息-->
    <select id="findItemById" resultType="com.unisound.iot.common.modle.Item" >
        SELECT item_id as itemId ,
              domain_id as domainId ,
              item_structure as itemStructure ,
              product_type as productType ,
              name ,
              create_time as createTime


        from item
        where dr = 0 and item_id = #{ itemId }

    </select>
    <!--查询合作商的自建组件列表-->
    <select id="findItemList" parameterType="com.unisound.iot.common.vo.ItemVo" resultType="com.unisound.iot.common.modle.Item">
        select item_id ,
               name  ,
               item_type as itemType ,
               scope_type  as scopeType,
               appkey ,
               domain_id as domainId ,
               source_item_id as sourceItemId ,
               product_type as productType ,
               item_structure as itemStructure ,
               create_time as createTime

        from item
        where dr = 0 and domain_id = #{domainId} and item_type = #{itemType}

    </select>
    <!-- 查询组件资源表的资源主键-->
    <select id="findAlbumIdListByItemId" resultType="Long" >
        SELECT album_id
        from item_data
        where dr =0 and item_id=#{itemId}
        order by sort_num desc

    </select>
    <!--查询网页URL-->
    <select id="findAlbumWebUrlByItemId" resultType="String" >
        select url
        from item_data
        where dr=0 and item_id=#{itemId}
    </select>
    <!--查询组件资源列表的数据类型-->
    <select id="findItemDataType" resultType="Integer" >
        select distinct(data_type)
        from item_data
        where dr=0 and item_id=#{itemId}

    </select>
    <!--根据appKey查询bannerId-->
    <select id="findItemDetail" parameterType="com.unisound.iot.common.vo.ItemVo" resultType="com.unisound.iot.common.modle.Item">
        select item_id as itemId ,
               name  ,
               item_type as itemType ,
               scope_type  as scopeType,
               appkey ,
               domain_id as domainId ,
               source_item_id as sourceItemId ,
               product_type as productType ,
               item_structure as itemStructure ,
               create_time as createTime

        from item
        where dr = 0 and
        item_id=#{itemId}
    </select>
    <!--查询组件资源-->
    <select id="findItemDataList" parameterType="com.unisound.iot.common.vo.ItemVo" resultType="com.unisound.iot.common.modle.ItemDate" >
        select item_id as itemId ,
               album_id as album_id ,
               data_type as dataType ,
               sort_num as sortNum ,
               create_time as  createTime
        from intem_data
        where dr=0 and item_id=#{itemId}

    </select>

    <!--验证组件名称是否冲突-->
    <select id="checkItemNameUnique" parameterType="com.unisound.iot.common.vo.ItemVo" resultType="Integer" >
        select count( 1 )
        from item
        where dr = 0 and
        domain_id = #{domainId} and
        item_type = #{itemType} and
        name=#{name}
        <if test="productType != null and productType != '' ">
             and product_type=#{productType}
        </if>
    </select>


    <insert id="addItem" parameterType="com.unisound.iot.common.modle.Item"
            useGeneratedKeys="true" keyProperty="itemId" >
        insert into item (
          name ,
          item_type,
          domain_id ,
          product_type ,
          item_structure ,
          <if test="sourceItemId != null and sourceItemId != '' ">
              source_item_id ,
          </if>
          <if test="creatorId != null and creatorId != '' ">
              creator_id ,
          </if>

        create_time
        ) values(
          #{ name },
          #{ itemType },
          #{ domainId },
          #{ productType },
          #{ itemStructure },
          <if test="sourceItemId != null and sourceItemId != '' ">
              #{sourceItemId},
          </if>
          <if test="creatorId != null and creatorId != '' ">
              #{creatorId} ,
          </if>

          now()
        )

    </insert>

    <!--记录组件资源子表-->
    <insert id="addItemDateList" parameterType="java.util.List" >

        insert into intem_data (
            item_id ,
            album_id ,
            data_type ,
            sort_num ,
            <if test="creator != null and creator != '' ">
                #{creator} ,
            </if>
            <if test="url != null and url != '' ">
                #{url} ,
            </if>
            createTime
        ) VALUES
        <foreach collection="list" separator="," item="itemData" close="" open="" index="index">
            (#{itemData.itemId},
            #{itemData.albumId},
            #{itemData.dataType},
            #{itemData.sortNum},
            <if test="creator != null and creator != '' ">
                #{creator} ,
            </if>
            <if test="url != null and url != '' ">
                #{url} ,
            </if>
            now())
        </foreach>
    </insert>


    <!--更新组件信息-->
    <update id="updateItem" parameterType="com.unisound.iot.common.modle.Item" >
        update item
        set updater = #{updater} ,update_time = now()
        <if test="name != null and name != '' ">
             , name = #{name}
        </if>
        <if test="productType != null and productType != '' ">
            , product_type = #{productType}
        </if>
        <if test="itemStructure != null and itemStructure != '' ">
            , item_structure = #{itemStructure}
        </if>
        where dr = 0 and item_id = #{itemId}

    </update>

    <!--批量更新组件资源-->
    <update id="updateBatchItemData" parameterType="java.util.List" >

        <foreach collection="list" item="itemData" index="index" open="" close="" separator=";">
            update item_data
            <set>
                sort_num= #{itemData.sortNum},
                updater = #{itemData.updater} ,
                update_time = now()
            </set>
            where item_id=#{itemData.itemId} and
                  album_id=#{itemData.albumId} and
                  data_type=#{itemData.dataType}
        </foreach>
    </update>

    <!--批量删除组件资源-->
    <update id="deleteBatchItemDate" parameterType="java.util.List" >
        <foreach collection="list" item="itemData" index="index" open="" close="" separator=";">
            update item_data
            <set>
                dr = 1,
                updater = #{itemData.updater} ,
                update_time = now()
            </set>
            where item_id=#{itemData.itemId} and
            album_id=#{itemData.albumId} and
            data_type=#{itemData.dataType}
        </foreach>

    </update>
    <!--批量创建组件资源-->
    <insert id="addBatchItemDate" parameterType="java.util.List" >
        insert into item_data(item_id , album_id ,dataType , sort_num , creator ,create_time)
        values
        <foreach collection="list" separator="," item="itemData" close="" open="" index="index">
            (
             #{itemData.itemId},
             #{itemData.albumId},
             #{itemData.dataType},
             #{itemData.sortNum},
             #{itemData.creator},
             now())
        </foreach>

    </insert>

    <!--删除自建组件-->
    <update id="deleteSelfItem" parameterType="com.unisound.iot.common.vo.ItemVo" >
        update item
        set dr = 1 , updater=#{updater} , updater_id=#{updaterId} ,update_time=now()
        where item_id=#{itemId}
        <if test="domainId != null and domainId != '' ">
            and domain_id = #{domainId}
        </if>
    </update>
    <!--删除自建模板和组件关系-->
    <update id="deleteItemTemplate" parameterType="com.unisound.iot.common.vo.ItemVo" >
        update template_item
        set dr = 1 , updater=#{updater} , updater_id=#{updaterId} ,update_time=now()
        where item_id=#{itemId} and item_create_type=#{itemCreateType}

    </update>

    <!--删除云端组件-->
    <update id="deleteDwhItem" parameterType="com.unisound.iot.common.vo.ItemVo" >
        update dwh_item
        set dr = 1 , updater=#{updater} , updater_id=#{updaterId} ,update_time=now()
        where dwh_item_id=#{itemId}
        <if test="domainId != null and domainId != '' ">
            and domain_id = #{domainId}
        </if>
    </update>




    <!--删除组件与资源关系 -->
    <update id="deleteItemDataByItemId" >
        update item_data
        set dr = 1 ,updater_id=#{updaterId} ,update_time = now()
        where id in(
        <foreach collection="list" separator="," item="itemDateId" close="" open="" index="index">
            #{ itemDateId }
        </foreach>
        )

    </update>





</mapper>