<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unisound.iot.dao.mapper.source1.album.SoundAlbumDao">

    <!--查询专辑合集主键集合-->
    <select id="findAlbumTypeIdList" resultType="Long" >
        select albumTypeId
        from sound_album_type
        where scopeValue=#{scopeValue} and scopeType=#{scopeType} and dr=0

    </select>
    <!--专辑合集行数-->
    <select id="findSoundAlbumCount" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumType" resultType="Integer" >
        select count( 1 )
        from sound_album_type
        where dr=0
        <if test="albumTypeId != null and albumTypeId != '' " >
            and  albumTypeId= #{albumTypeId}
        </if>
        <if test="albumTypeName != null and albumTypeName != '' " >
            and  albumTypeName like "%"#{albumTypeName}"%"
        </if>
        <if test="scopeValue != null and scopeValue != '' ">
            and scopeValue=#{scopeValue}
        </if>
        <if test="scopeType != null and scopeType != '' ">
            and scopeType=#{scopeType}
        </if>
    </select>
    <!--音频专辑分类列表-->
    <select id="findSoundAlbumList" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumType" resultType="com.unisound.iot.common.vo.album.SoundAlbumTypeVO">
        SELECT albumTypeId ,
        albumTypeName,
        companyId ,
        scopeValue ,
        scopeType ,
        logoUrl ,
        smallFileLogoUrl ,
        createTime
        from sound_album_type
        where dr =0
        <if test="albumTypeId != null and albumTypeId != '' " >
            and  albumTypeId= #{albumTypeId}
        </if>
        <if test="albumTypeName != null and albumTypeName != '' " >
            and  albumTypeName like "%"#{albumTypeName}"%"
        </if>
        <if test="scopeValue != null and scopeValue != '' ">
            and scopeValue=#{scopeValue}
        </if>
        <if test="scopeType != null and scopeType != '' ">
            and scopeType=#{scopeType}
        </if>
        order by updateTime desc , createTime desc
    </select>



    <!--查询专辑合集的详细信息-->
    <select id="findAlbumTypeInfo" resultType="com.unisound.iot.common.modle.dataRpc.AlbumType" >
        SELECT albumTypeId ,
        albumTypeName,
        companyId ,
        logoUrl ,
        smallFileLogoUrl ,
        createTime
        from sound_album_type
        where dr =0 and  albumTypeId= #{albumTypeId}

    </select>

    <!--专辑合集子集-->
    <select id="findAlbumTypeDetail" resultType="Long" >
        SELECT albumId
        from sound_album_type_detail
        where albumTypeId =#{albumTypeId} and dr=0
        order by albumLevel desc

    </select>
    <!--创建专辑合集-->
    <insert id="addAlbumType" useGeneratedKeys="true" keyProperty="albumTypeId" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumType" >
        insert into sound_album_type(
        albumTypeName
        ,scopeValue
        ,scopeType
        ,createTime
        ,updateTime
        <if test="logoUrl != null and logoUrl != '' ">
            ,logoUrl
        </if>
        <if test="smallFileLogoUrl != null and smallFileLogoUrl != '' ">
            ,smallFileLogoUrl
        </if>
        <if test="creator != null and creator != '' ">
            ,creator
        </if>
        ) values (
        #{albumTypeName}
        ,#{scopeValue}
        ,#{scopeType}
        , now()
        , now()
        <if test="logoUrl != null and logoUrl != '' ">
            ,#{logoUrl}
        </if>
        <if test="smallFileLogoUrl != null and smallFileLogoUrl != '' ">
            ,#{smallFileLogoUrl}
        </if>
        <if test="creator != null and creator != '' ">
            ,#{creator}
        </if>
        )

    </insert>

    <!--创建专辑分类子表-->
    <insert id="addAlbumTypeDetail" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumTypeDetail" >
        insert into sound_album_type_detail(
        albumTypeId
        , albumId
        , albumLevel
        , creator
        , createTime
        )values (
        #{albumTypeId}
        , #{albumId}
        , #{albumLevel}
        , #{creator}
        ,now()
        )

    </insert>

    <!--编辑专辑合集主表-->
    <update id="updateAlbumType" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumType" >
        update sound_album_type
        set updater=#{updater} ,updateTime=now()
        <if test="logoUrl != null and logoUrl != '' ">
            , logoUrl = #{logoUrl}
        </if>
        <if test="smallFileLogoUrl != null and smallFileLogoUrl != '' ">
            ,smallFileLogoUrl=#{smallFileLogoUrl}
        </if>
        <if test="albumTypeName != null and albumTypeName != '' ">
            ,albumTypeName=#{albumTypeName}
        </if>
        where albumTypeId=#{albumTypeId} and dr=0

    </update>
    <!--删除专辑合集子表-->
    <update id="deleteAlbumTypeDetail" >
        update sound_album_type_detail
        set dr =1 ,updater=#{updater} ,updateTime=now()
        where albumTypeId=#{albumTypeId} and albumId=#{albumId}

    </update>

    <!--更新原有专辑合集子表的权重-->
    <update id="updateAlbumDetailLevel" parameterType="com.unisound.iot.common.modle.dataRpc.AlbumType" >
        update sound_album_type_detail
        set updater=#{updater} ,updateTime=now() ,albumLevel=#{appLevel}
        where albumId=#{albumId} and albumTypeId=#{albumTypeId}
    </update>

    <!--删除专辑合集主表-->
    <update id="deleteAlbumType" >
        update sound_album_type
        set updater=#{updater} ,updateTime=now() ,dr=1
        where albumTypeId=#{albumTypeId}

    </update>
    <!--删除子表-->
    <update id="deleteAlbumDetailById" >
        update sound_album_type_detail
        set updater=#{updater} ,updateTime=now() ,dr=1
        where albumTypeId=#{albumTypeId}


    </update>
</mapper>